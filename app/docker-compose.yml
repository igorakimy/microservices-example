version: "3"

services:

  # broker service
  broker:
    build:
      context: "./../broker"
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80"
    env_file:
      - "./.env"
      - "./../listener/.env"
    deploy:
      mode: replicated
      replicas: 1

  # logger service
  logger:
    build:
      context: "./../logger"
      dockerfile: Dockerfile
    restart: always
    env_file:
      - "./../logger/.env"
    deploy:
      mode: replicated
      replicas: 1

  # authenticate service
  auth:
    build:
      context: "./../auth"
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - "./../auth/.env"

  # listener service
  listener:
    build:
      context: "./../listener"
      dockerfile: Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - "./../listener/.env"


  # mail service
  mail:
    build:
      context: "./../mail"
      dockerfile: Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - "./../mail/.env"

  # postgresql
  postgres:
    image: "postgres:14.0"
    ports:
      - "54321:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - "./.env"
    volumes:
      - pg_data:/var/lib/postgresql/data

  # mongo
  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    env_file:
      - "./../logger/.env"
      - "./../logger/mongo.env"
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh

  # mailhog
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"

  # rabbitmq
  rabbitmq:
    image: "rabbitmq:3.9.29-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/

volumes:
  pg_data:
  mongo_data:
  rabbitmq_data:
